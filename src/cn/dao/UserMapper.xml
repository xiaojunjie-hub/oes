<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.entity.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="realname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="headpic" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, phone, email, realname, address, role, headpic
  </sql>
  
   <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="getLoverUserList" resultMap="BaseResultMap">
    select  *  from record where 1=1
    <if test="username!=null and username!=''">
  		and username like '%${username}%'
  	</if>
 	order by id desc
  </select>
  
  
  <select id="getTeacherList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user  where role=2
    <if test="username!=null and username!=''">
  		and username like '%${username}%'
  	</if>
 	order by id desc
  </select>
  
  <select id="getUserList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user  where Role=3 
    <if test="username!=null and username!=''">
  		and username like '%${username}%'
  	</if>
 	order by id desc
  </select>
  
  
  <select id="login" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    
    where username=#{username} and password=#{password} 
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.entity.User">
    insert into user (id, username, password, 
      phone, email, realname, 
      address, role, headpic
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{headpic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="headpic != null">
        headpic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="headpic != null">
        #{headpic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="headpic != null">
        headpic = #{headpic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      headpic = #{headpic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>